html {
  background-color:rgb(237, 248, 248);
  /* font-family: "Open Sans Condensed"; */
  font-size: 18pt;
  font-weight: 100;
  text-align: center;
  padding-top: 20px;
  margin: auto;

}
canvas {
  display: block;
  margin-left: auto;
  margin-right: auto;

}

label {
  padding: 10px;
  display: block;
  text-align: center;
}

.column {
  float: left;
  padding-left: 100px;
  padding-right: 10px;
}

/* Clearfix (clear floats) */
.row::after {
  content: "";
  clear: both;
  display: table;
}

.multipleSelection {
  width: 300px;
  background-color: #17b198;
}

.selectBox {
  position: relative;
}

.selectBox select {
  width: 100%;
  font-weight: bold;
}

.overSelect {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
}

#checkBoxes {
  display: none;
  border: 1px #8DF5E4 solid;
  position: absolute;
  width: 300px;
  z-index: 1;
}

#checkBoxes label {
  display: block;
}

#checkBoxes label:hover {
  background-color: #43ddc4;
}



/* marina */
/* .button {
  background-color: white; 
  color: black; 
  border: 2px solid rgb(5, 119, 119);
} */
.button {
  background-color: rgb(5, 119, 119);
  border: none;
  color: white;
  padding: 10px 10px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 18px;
  margin: 4px 2px;
  transition-duration: 0.4s;
  cursor: pointer;
}
.button:hover {
  background-color: rgb(93, 126, 126);
  color: rgb(255, 255, 255);
}


a { color: inherit; } 

.text-field{
  width: 80%;
  padding: 12px 20px;
  box-sizing: border-box;
}

/* .select {
  width: 80%;
  padding: 12px 20px;
  box-sizing: border-box;
} */

.property {
  width: 400px;
  margin: auto;
}

.slideshow {
  background: rgb(237, 248, 248);
  border-radius: 10px;
  margin-bottom: 20px;
  position: relative;
}
/* We need to set the absolute position for the slideshow items as we are going to animate them. So, specify the absolute value for the position property and set 0 value for the top, bottom left, and right in order to keep the slide item to the center. Define the transition property for the smoothness. */

.slideshow-item {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  opacity: 0;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
}
/* Now, make the slideshow image responsive by defining the 100% value for the width. Similarly, keep the margin value to the auto and display as a block. Besides these CSS properties, you can also define some additional styles in order to customize the slideshow images. For example, you can set border, shadow, etc. */

.slideshow-item img {
  width: 100%;
  display: block;
  margin: auto;
}
/* After that, create CSS styles for the previous and the next arrow button. The background property holds the data of an arrow image icon. */

.arrow {
  position: absolute;
  top: 0;
  display: block;
  width: 50px;
  height: 100%;
  /* background: url("data:image/svg+xml,%3Csvg%20viewBox%3D%220%200%206%2016%22%20width%3D%226%22%20height%3D%2216%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20d%3D%22m5%201-4%207%204%207%22%20fill%3D%22none%22%20stroke-width%3D%22.8%22%20opacity%3D%22.3%22%20stroke%3D%22%23000%22%20stroke-linecap%3D%22square%22%2F%3E%3Cpath%20d%3D%22m5%201-4%207%204%207%22%20fill%3D%22none%22%20stroke-width%3D%22.5%22%20stroke%3D%22%23fff%22%20stroke-linecap%3D%22square%22%2F%3E%3C%2Fsvg%3E%0A") no-repeat center/30px; */
}
.arrow-next {
  right: 0;
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.progress {
  position: absolute;
  top: 20px;
  left: 20px;
  color: #ccc;
  font-family: sans-serif;
}
/* Actually, the play button is a link element. So, we need to convert it into a button. To do so, display it as inline-block, define an absolute position, and specify the background color. Likewise, define the 8px 16px value for the padding property and set 1px border. Similarly, declare other properties as mentioned below. */

/* .play {
  display: inline-block;
  position: absolute;
  bottom: 0;
  right: 20px;
  margin-bottom: 20px;
  padding: 8px 16px;
  background: -webkit-gradient(linear, left top, left bottom, from(white), to(#e6e6e6));
  background: linear-gradient(white, #e6e6e6);
  font-family: sans-serif;
  text-transform: capitalize;
  text-decoration: none;
  border-radius: 4px;
  color: #333;
  border: 1px solid #1a1a1a;
  opacity: .3;
  z-index: 5;
  cursor: default;
  -webkit-transition: all 750ms ease;
  transition: all 750ms ease;
}

[id^="target"]:target ~ .play {
  -webkit-transition: all 750ms ease;
  transition: all 750ms ease;
  opacity: 1;
  cursor: pointer;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.7);
} */
  
[id^="target"] {
  display: none;
}
.item-1 {
  z-index: 2;
  opacity: 1;
}
 
*:target ~ .item-1 {
  opacity: 0;
}
 
#target-1:target ~ .item-1 {
  opacity: 1;
}
 
#target-2:target ~ .item-2,
#target-3:target ~ .item-3,
#target-4:target ~ .item-4 ,
#target-5:target ~ .item-5,
#target-6:target ~ .item-6,
#target-7:target ~ .item-7,
#target-8:target ~ .item-8,
#target-9:target ~ .item-9,
#target-10:target ~ .item-10,
#target-11:target ~ .item-11,
#target-12:target ~ .item-12,
#target-13:target ~ .item-13,
#target-14:target ~ .item-14,
#target-15:target ~ .item-15,
#target-16:target ~ .item-16,
#target-17:target ~ .item-17,
#target-18:target ~ .item-18,
#target-19:target ~ .item-19 {
  z-index: 3;
  opacity: 1;
}

@-webkit-keyframes slideshow {
  0%, 30%, 100% {
    opacity: 0;
  }
  5%, 25% {
    opacity: 1;
  }
}
 
@keyframes slideshow {
  0%, 30%, 100% {
    opacity: 0;
  }
  5%, 25% {
    opacity: 1;
  }
}

.item-1, 
.item-2,
.item-3, 
.item-4 ,
.item-5 ,
.item-6,
.item-7,
.item-8,
.item-9,
.item-10,
.item-11,
.item-12, 
.item-13,
.item-14,
.item-15,
.item-16,
.item-17,
.item-18,
.item-19 {
  -webkit-animation: slideshow 16s ease 0s infinite;
          animation: slideshow 16s ease 0s infinite;
}

#target-2:target ~ .item-2,
#target-3:target ~ .item-3,
#target-4:target ~ .item-4 ,
#target-5:target ~ .item-5,
#target-6:target ~ .item-6,
#target-7:target ~ .item-7,
#target-8:target ~ .item-8,
#target-9:target ~ .item-9,
#target-10:target ~ .item-10,
#target-11:target ~ .item-11,
#target-12:target ~ .item-12,
#target-13:target ~ .item-13,
#target-14:target ~ .item-14,
#target-15:target ~ .item-15,
#target-16:target ~ .item-16,
#target-17:target ~ .item-17,
#target-18:target ~ .item-18,
#target-19:target ~ .item-19  
{
  opacity: 1 !important;
  -webkit-animation: none;
          animation: none;
}
